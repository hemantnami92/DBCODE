<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="10" ignored="0" total="23" passed="13">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="4352" started-at="2019-12-27T12:16:53Z" finished-at="2019-12-27T12:16:58Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="4352" started-at="2019-12-27T12:16:53Z" finished-at="2019-12-27T12:16:58Z">
      <class name="com.schemaxtech.testAutomationFrameworkTest.WorkstationT">
        <test-method status="PASS" signature="createWorkstationT(java.lang.String, org.json.JSONObject, java.util.Map, java.util.Map)[pri:1, instance:com.schemaxtech.testAutomationFrameworkTest.WorkstationT@6c3708b3]" name="createWorkstationT" duration-ms="2649" started-at="2019-12-27T12:16:54Z" data-provider="sampleDataProviderget" finished-at="2019-12-27T12:16:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tc_002]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"workstation_type_description":"Testing","department_type":"sewing","workstation_type_code":"planning427"}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{errInfo=, workstation_type_code=PLANNING427}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{workstation_type_description=data/workstation_type_description, errInfo=errInfo, department_type=data/department_type, workstation_type_code=data/workstation_type_code, activated_date=data/activated_date, workstation_type_id=data/workstation_type_id, status=status}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createWorkstationT -->
        <test-method status="FAIL" signature="createWorkstationT(java.lang.String, org.json.JSONObject, java.util.Map, java.util.Map)[pri:1, instance:com.schemaxtech.testAutomationFrameworkTest.WorkstationT@6c3708b3]" name="createWorkstationT" duration-ms="59" started-at="2019-12-27T12:16:56Z" data-provider="sampleDataProviderget" finished-at="2019-12-27T12:16:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tc_001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"workstation_type_description":"Testing1","department_type":"abc1","workstation_type_code":"planning427"}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{errInfo=The department type doesnt exist, workstation_type_code=}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{workstation_type_description=data/workstation_type_description, errInfo=errInfo, department_type=data/department_type, workstation_type_code=data/workstation_type_code, activated_date=data/activated_date, workstation_type_id=data/workstation_type_id, status=status}]]>
              </value>
            </param>
          </params>
          <exception class="org.json.JSONException">
            <message>
              <![CDATA[JSONObject["data"] not found.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.json.JSONException: JSONObject["data"] not found.
at org.json.JSONObject.get(JSONObject.java:566)
at com.schemaxtech.testAutomationFrameworkTest.WorkstationT.createWorkstationT(WorkstationT.java:90)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.json.JSONException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createWorkstationT -->
        <test-method status="PASS" signature="createWorkstationT(java.lang.String, org.json.JSONObject, java.util.Map, java.util.Map)[pri:1, instance:com.schemaxtech.testAutomationFrameworkTest.WorkstationT@6c3708b3]" name="createWorkstationT" duration-ms="177" started-at="2019-12-27T12:16:56Z" data-provider="sampleDataProviderget" finished-at="2019-12-27T12:16:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tc_003]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"workstation_type_description":"Testing","department_type":"sewing","workstation_type_code":"planning1427"}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{errInfo=, workstation_type_code=PLANNING1427}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{workstation_type_description=data/workstation_type_description, errInfo=errInfo, department_type=data/department_type, workstation_type_code=data/workstation_type_code, activated_date=data/activated_date, workstation_type_id=data/workstation_type_id, status=status}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createWorkstationT -->
        <test-method status="FAIL" signature="updateWorkstation(java.lang.String, org.json.JSONObject, java.util.Map, java.util.Map)[pri:2, instance:com.schemaxtech.testAutomationFrameworkTest.WorkstationT@6c3708b3]" name="updateWorkstation" duration-ms="68" started-at="2019-12-27T12:16:56Z" data-provider="sampleDataProviderget" finished-at="2019-12-27T12:16:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"workstation_code":2,"section_code":"P12345","activated_date":"","workstation_id":"dbc66a82-5361-4eb4-9d98-f7c612286778","isActive":"","workstation_description":"cutting6445try3900000","workstation_type_id":"ad336703-f3e3-4d6e-bcc4-0cd39c816de6","deactivated_date":""}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{workstation_id=, workstation_type_id=, status=true}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{workstation_code=data/workstation_code, section_code=data/section_code, workstation_id=data/workstation_id, workstation_description=data/workstation_description, workstation_type_id=data/workstation_type_id, status=status}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Verification of 'status' with value 'true' in response json failed expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Verification of 'status' with value 'true' in response json failed expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.schemaxtech.testAutomationFramework.TestAutomationUtil.verifyResponse(TestAutomationUtil.java:338)
at com.schemaxtech.testAutomationFrameworkTest.WorkstationT.updateWorkstation(WorkstationT.java:156)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateWorkstation -->
        <test-method status="PASS" signature="updateWorkstation(java.lang.String, org.json.JSONObject, java.util.Map, java.util.Map)[pri:2, instance:com.schemaxtech.testAutomationFrameworkTest.WorkstationT@6c3708b3]" name="updateWorkstation" duration-ms="75" started-at="2019-12-27T12:16:57Z" data-provider="sampleDataProviderget" finished-at="2019-12-27T12:16:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_002]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"workstation_code":5,"section_code":"sec01","activated_date":"","workstation_id":"203c8164-4795-414e-a1be-0d937cb16dbb","isActive":"","workstation_description":"string","workstation_type_id":"ad336703-f3e3-4d6e-bcc4-0cd39c816de6","deactivated_date":""}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{workstation_id=, workstation_type_id=, status=false}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{workstation_code=data/workstation_code, section_code=data/section_code, workstation_id=data/workstation_id, workstation_description=data/workstation_description, workstation_type_id=data/workstation_type_id, status=status}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateWorkstation -->
        <test-method status="FAIL" signature="updateWorkstation(java.lang.String, org.json.JSONObject, java.util.Map, java.util.Map)[pri:2, instance:com.schemaxtech.testAutomationFrameworkTest.WorkstationT@6c3708b3]" name="updateWorkstation" duration-ms="67" started-at="2019-12-27T12:16:57Z" data-provider="sampleDataProviderget" finished-at="2019-12-27T12:16:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_003]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"workstation_code":6,"section_code":"sec1","activated_date":"","workstation_id":"f884a94f-0c94-48e5-ab8c-cb80acb9d0cf","isActive":"","workstation_description":"","workstation_type_id":"ad336703-f3e3-4d6e-bcc4-0cd39c816de6","deactivated_date":""}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{workstation_id=, workstation_type_id=, status=true}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{workstation_code=data/workstation_code, section_code=data/section_code, workstation_id=data/workstation_id, workstation_description=data/workstation_description, workstation_type_id=data/workstation_type_id, status=status}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Verification of 'status' with value 'true' in response json failed expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Verification of 'status' with value 'true' in response json failed expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.schemaxtech.testAutomationFramework.TestAutomationUtil.verifyResponse(TestAutomationUtil.java:338)
at com.schemaxtech.testAutomationFrameworkTest.WorkstationT.updateWorkstation(WorkstationT.java:156)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateWorkstation -->
        <test-method status="FAIL" signature="updateWorkstation(java.lang.String, org.json.JSONObject, java.util.Map, java.util.Map)[pri:2, instance:com.schemaxtech.testAutomationFrameworkTest.WorkstationT@6c3708b3]" name="updateWorkstation" duration-ms="58" started-at="2019-12-27T12:16:57Z" data-provider="sampleDataProviderget" finished-at="2019-12-27T12:16:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_004]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"workstation_code":6,"section_code":"sec1","activated_date":"","workstation_id":"f884a94f-0c94-48e5-ab8c-cb80acb9d0cf","isActive":"","workstation_description":"cutting6445try3","workstation_type_id":"","deactivated_date":""}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{workstation_id=, workstation_type_id=, status=true}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{workstation_code=data/workstation_code, section_code=data/section_code, workstation_id=data/workstation_id, workstation_description=data/workstation_description, workstation_type_id=data/workstation_type_id, status=status}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Verification of 'status' with value 'true' in response json failed expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Verification of 'status' with value 'true' in response json failed expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.schemaxtech.testAutomationFramework.TestAutomationUtil.verifyResponse(TestAutomationUtil.java:338)
at com.schemaxtech.testAutomationFrameworkTest.WorkstationT.updateWorkstation(WorkstationT.java:156)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateWorkstation -->
        <test-method status="PASS" signature="updateWorkstation(java.lang.String, org.json.JSONObject, java.util.Map, java.util.Map)[pri:2, instance:com.schemaxtech.testAutomationFrameworkTest.WorkstationT@6c3708b3]" name="updateWorkstation" duration-ms="54" started-at="2019-12-27T12:16:57Z" data-provider="sampleDataProviderget" finished-at="2019-12-27T12:16:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_005]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"workstation_code":26,"section_code":"","activated_date":"","workstation_id":"dbc66a82-5361-4eb4-9d98-f7c612286778","isActive":"","workstation_description":"cutting6445try3","workstation_type_id":"ad336703-f3e3-4d6e-bcc4-0cd39c816de6","deactivated_date":""}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{workstation_id=, workstation_type_id=, status=false}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{workstation_code=data/workstation_code, section_code=data/section_code, workstation_id=data/workstation_id, workstation_description=data/workstation_description, workstation_type_id=data/workstation_type_id, status=status}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateWorkstation -->
        <test-method status="PASS" signature="updateWorkstation(java.lang.String, org.json.JSONObject, java.util.Map, java.util.Map)[pri:2, instance:com.schemaxtech.testAutomationFrameworkTest.WorkstationT@6c3708b3]" name="updateWorkstation" duration-ms="55" started-at="2019-12-27T12:16:57Z" data-provider="sampleDataProviderget" finished-at="2019-12-27T12:16:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_006]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"workstation_code":26,"section_code":"P12345","activated_date":"","workstation_id":"","isActive":"","workstation_description":"cutting6445try3876","workstation_type_id":"ad336703-f3e3-4d6e-bcc4-0cd39c816de6","deactivated_date":""}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{workstation_id=, workstation_type_id=, status=false}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{workstation_code=data/workstation_code, section_code=data/section_code, workstation_id=data/workstation_id, workstation_description=data/workstation_description, workstation_type_id=data/workstation_type_id, status=status}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateWorkstation -->
        <test-method status="FAIL" signature="updateWorkstation(java.lang.String, org.json.JSONObject, java.util.Map, java.util.Map)[pri:2, instance:com.schemaxtech.testAutomationFrameworkTest.WorkstationT@6c3708b3]" name="updateWorkstation" duration-ms="102" started-at="2019-12-27T12:16:57Z" data-provider="sampleDataProviderget" finished-at="2019-12-27T12:16:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_007]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"workstation_code":6,"section_code":"sec1","activated_date":"","workstation_id":"f884a94f-0c94-48e5-ab8c-cb80acb9d0cf","isActive":"","workstation_description":"cutting6445try3","workstation_type_id":"bc06c472-e364-4852-89dd","deactivated_date":""}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{workstation_id=, workstation_type_id=, status=true}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{workstation_code=data/workstation_code, section_code=data/section_code, workstation_id=data/workstation_id, workstation_description=data/workstation_description, workstation_type_id=data/workstation_type_id, status=status}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Verification of 'status' with value 'true' in response json failed expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Verification of 'status' with value 'true' in response json failed expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.schemaxtech.testAutomationFramework.TestAutomationUtil.verifyResponse(TestAutomationUtil.java:338)
at com.schemaxtech.testAutomationFrameworkTest.WorkstationT.updateWorkstation(WorkstationT.java:156)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateWorkstation -->
        <test-method status="PASS" signature="updateWorkstation(java.lang.String, org.json.JSONObject, java.util.Map, java.util.Map)[pri:2, instance:com.schemaxtech.testAutomationFrameworkTest.WorkstationT@6c3708b3]" name="updateWorkstation" duration-ms="66" started-at="2019-12-27T12:16:57Z" data-provider="sampleDataProviderget" finished-at="2019-12-27T12:16:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_008]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"workstation_code":67,"section_code":"sec1","activated_date":"","workstation_id":"f884a94f-0c94-48e5-ab8c-cb80acb9d0cf","isActive":"","workstation_description":"cutting6445try3","workstation_type_id":"ad336703-f3e3-4d6e-bcc4-0cd39c816de6","deactivated_date":""}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{workstation_id=, workstation_type_id=, status=false}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{workstation_code=data/workstation_code, section_code=data/section_code, workstation_id=data/workstation_id, workstation_description=data/workstation_description, workstation_type_id=data/workstation_type_id, status=status}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateWorkstation -->
        <test-method status="FAIL" signature="updateWorkstation(java.lang.String, org.json.JSONObject, java.util.Map, java.util.Map)[pri:2, instance:com.schemaxtech.testAutomationFrameworkTest.WorkstationT@6c3708b3]" name="updateWorkstation" duration-ms="53" started-at="2019-12-27T12:16:57Z" data-provider="sampleDataProviderget" finished-at="2019-12-27T12:16:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_009]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"workstation_code":6,"section_code":"sec16","activated_date":"","workstation_id":"f884a94f-0c94-48e5-ab8c-cb80acb9d0cf","isActive":"","workstation_description":"cutting6445try3","workstation_type_id":"ad336703-f3e3-4d6e-bcc4-0cd39c816de6","deactivated_date":""}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{workstation_id=, workstation_type_id=, status=true}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{workstation_code=data/workstation_code, section_code=data/section_code, workstation_id=data/workstation_id, workstation_description=data/workstation_description, workstation_type_id=data/workstation_type_id, status=status}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Verification of 'status' with value 'true' in response json failed expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Verification of 'status' with value 'true' in response json failed expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.schemaxtech.testAutomationFramework.TestAutomationUtil.verifyResponse(TestAutomationUtil.java:338)
at com.schemaxtech.testAutomationFrameworkTest.WorkstationT.updateWorkstation(WorkstationT.java:156)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateWorkstation -->
        <test-method status="PASS" signature="updateWorkstationT(java.lang.String, org.json.JSONObject, java.util.Map, java.util.Map)[pri:2, instance:com.schemaxtech.testAutomationFrameworkTest.WorkstationT@6c3708b3]" name="updateWorkstationT" duration-ms="66" started-at="2019-12-27T12:16:57Z" data-provider="sampleDataProviderget" finished-at="2019-12-27T12:16:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tc_001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"workstation_type_description":"Testing2","department_type":"abc","workstation_type_code":"planning147"}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{errInfo=The workstation type doesnt exist, workstation_type_code=, status=}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{workstation_type_description=data/workstation_type_description, is_active=data/is_active, errInfo=errInfo, department_type=data/department_type, workstation_type_code=data/workstation_type_code, activated_date=data/activated_date, workstation_type_id=data/workstation_type_id, status=status}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateWorkstationT -->
        <test-method status="PASS" signature="updateWorkstationT(java.lang.String, org.json.JSONObject, java.util.Map, java.util.Map)[pri:2, instance:com.schemaxtech.testAutomationFrameworkTest.WorkstationT@6c3708b3]" name="updateWorkstationT" duration-ms="47" started-at="2019-12-27T12:16:57Z" data-provider="sampleDataProviderget" finished-at="2019-12-27T12:16:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tc_002]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"workstation_type_description":"Testing3","department_type":"planning","workstation_type_code":"planning001"}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{errInfo=The workstation type doesnt exist, workstation_type_code=, status=}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{workstation_type_description=data/workstation_type_description, is_active=data/is_active, errInfo=errInfo, department_type=data/department_type, workstation_type_code=data/workstation_type_code, activated_date=data/activated_date, workstation_type_id=data/workstation_type_id, status=status}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateWorkstationT -->
        <test-method status="PASS" signature="createWtom(java.lang.String, org.json.JSONObject, java.util.Map, java.util.Map)[pri:3, instance:com.schemaxtech.testAutomationFrameworkTest.WorkstationT@6c3708b3]" name="createWtom" duration-ms="52" started-at="2019-12-27T12:16:57Z" data-provider="sampleDataProviderget" finished-at="2019-12-27T12:16:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tc_001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"workstation_type_id":"9b09b6af-3646-4819-926e-e8a11c7a45fe","operation_code":["10","15"]}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{status=false}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{errInfo=errInfo, workstation_type_id=data/workstation_type_id, status=status}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createWtom -->
        <test-method status="PASS" signature="createWtom(java.lang.String, org.json.JSONObject, java.util.Map, java.util.Map)[pri:3, instance:com.schemaxtech.testAutomationFrameworkTest.WorkstationT@6c3708b3]" name="createWtom" duration-ms="79" started-at="2019-12-27T12:16:57Z" data-provider="sampleDataProviderget" finished-at="2019-12-27T12:16:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tc_002]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"workstation_type_id":"9b09b6af-3646-4819-926e-e8a11c7a45fe","operation_code":["10"]}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{status=false}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{errInfo=errInfo, workstation_type_id=data/workstation_type_id, status=status}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createWtom -->
        <test-method status="FAIL" signature="getWorkstationByWorkstaioncode(java.lang.String, org.json.JSONObject, java.util.Map, java.util.Map)[pri:3, instance:com.schemaxtech.testAutomationFrameworkTest.WorkstationT@6c3708b3]" name="getWorkstationByWorkstaioncode" duration-ms="64" started-at="2019-12-27T12:16:57Z" data-provider="sampleDataProviderget" finished-at="2019-12-27T12:16:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"workstation_type_id":"9b09b6af-3646-4819-926e-e8a11c7a45fe","workstation_id":"983dc0e1-12d4-456e-a8ac-7e0125fd7966"}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{status=true}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{workstation_code=data/workstation_code, activated_date=data/activated_date, section_code=data/section_code, workstation_id=data/workstation_id, isActive=isActive, workstation_description=data/workstation_description, deactivated_date=data/deactivated_date, workstation_type_id=data/workstation_type_id, status=status}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Verification of 'status' with value 'true' in response json failed expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Verification of 'status' with value 'true' in response json failed expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.schemaxtech.testAutomationFramework.TestAutomationUtil.verifyResponse(TestAutomationUtil.java:338)
at com.schemaxtech.testAutomationFrameworkTest.WorkstationT.getWorkstationByWorkstaioncode(WorkstationT.java:146)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getWorkstationByWorkstaioncode -->
        <test-method status="PASS" signature="getWorkstationByWorkstaioncode(java.lang.String, org.json.JSONObject, java.util.Map, java.util.Map)[pri:3, instance:com.schemaxtech.testAutomationFrameworkTest.WorkstationT@6c3708b3]" name="getWorkstationByWorkstaioncode" duration-ms="68" started-at="2019-12-27T12:16:57Z" data-provider="sampleDataProviderget" finished-at="2019-12-27T12:16:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_002]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"workstation_type_id":"9b09b6af-3646-4819-926e-e8a11c7a45fe","workstation_id":"f884a94f-0c94-48e5-ab8c-cb80ac"}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{status=false}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{workstation_code=data/workstation_code, activated_date=data/activated_date, section_code=data/section_code, workstation_id=data/workstation_id, isActive=isActive, workstation_description=data/workstation_description, deactivated_date=data/deactivated_date, workstation_type_id=data/workstation_type_id, status=status}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getWorkstationByWorkstaioncode -->
        <test-method status="PASS" signature="deacWtom(java.lang.String, org.json.JSONObject, java.util.Map, java.util.Map)[pri:4, instance:com.schemaxtech.testAutomationFrameworkTest.WorkstationT@6c3708b3]" name="deacWtom" duration-ms="50" started-at="2019-12-27T12:16:57Z" data-provider="sampleDataProviderget" finished-at="2019-12-27T12:16:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tc_001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"workstation_type_id":"9b09b6af-3646-4819-926e-e8a11c7a45fe","operation_code":["string"]}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{status=false}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{errInfo=errInfo, workstation_type_id=data/workstation_type_id, status=status}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deacWtom -->
        <test-method status="PASS" signature="deacWtom(java.lang.String, org.json.JSONObject, java.util.Map, java.util.Map)[pri:4, instance:com.schemaxtech.testAutomationFrameworkTest.WorkstationT@6c3708b3]" name="deacWtom" duration-ms="39" started-at="2019-12-27T12:16:58Z" data-provider="sampleDataProviderget" finished-at="2019-12-27T12:16:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tc_002]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"workstation_type_id":"9b09b6af-3646-4819-926e-e8a11c7a45fe","operation_code":["string"]}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{status=false}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{errInfo=errInfo, workstation_type_id=data/workstation_type_id, status=status}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deacWtom -->
        <test-method status="FAIL" signature="createWorkstation(java.lang.String, org.json.JSONObject, java.util.Map, java.util.Map)[pri:5, instance:com.schemaxtech.testAutomationFrameworkTest.WorkstationT@6c3708b3]" name="createWorkstation" duration-ms="63" started-at="2019-12-27T12:16:58Z" data-provider="sampleDataProviderget" finished-at="2019-12-27T12:16:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"workstation_code":"","section_code":"Section427","activated_date":"string","workstation_id":"string","isActive":true,"workstation_description":"Sample427","workstation_type_id":"9b09b6af-3646-4819-926e-e8a11c7a45fe","deactivated_date":"string","capacity":0}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{status=false}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{workstation_code=data/workstation_code, activated_date=data/activated_date, section_code=data/section_code, workstation_id=data/workstation_id, isActive=isActive, workstation_description=data/workstation_description, workstation_type_id=data/workstation_type_id, deactivated_date=data/deactivated_date, status=status}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.schemaxtech.testAutomationFramework.TestAutomationUtil.verifyResponse(TestAutomationUtil.java:323)
at com.schemaxtech.testAutomationFrameworkTest.WorkstationT.createWorkstation(WorkstationT.java:136)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createWorkstation -->
        <test-method status="FAIL" signature="createWorkstation(java.lang.String, org.json.JSONObject, java.util.Map, java.util.Map)[pri:5, instance:com.schemaxtech.testAutomationFrameworkTest.WorkstationT@6c3708b3]" name="createWorkstation" duration-ms="87" started-at="2019-12-27T12:16:58Z" data-provider="sampleDataProviderget" finished-at="2019-12-27T12:16:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_002]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"workstation_code":"WOKSTATIONRKS427","section_code":"","activated_date":"string","workstation_id":"string","isActive":true,"workstation_description":"Sample427","workstation_type_id":"9b09b6af-3646-4819-926e-e8a11c7a45fe","deactivated_date":"string","capacity":0}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{status=false}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{workstation_code=data/workstation_code, activated_date=data/activated_date, section_code=data/section_code, workstation_id=data/workstation_id, isActive=isActive, workstation_description=data/workstation_description, workstation_type_id=data/workstation_type_id, deactivated_date=data/deactivated_date, status=status}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.schemaxtech.testAutomationFramework.TestAutomationUtil.verifyResponse(TestAutomationUtil.java:323)
at com.schemaxtech.testAutomationFrameworkTest.WorkstationT.createWorkstation(WorkstationT.java:136)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createWorkstation -->
        <test-method status="FAIL" signature="createWorkstation(java.lang.String, org.json.JSONObject, java.util.Map, java.util.Map)[pri:5, instance:com.schemaxtech.testAutomationFrameworkTest.WorkstationT@6c3708b3]" name="createWorkstation" duration-ms="90" started-at="2019-12-27T12:16:58Z" data-provider="sampleDataProviderget" finished-at="2019-12-27T12:16:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_003]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"workstation_code":"WOKSTATIONRKS427","section_code":"Section427","activated_date":"string","workstation_id":"string","isActive":true,"workstation_description":"Sample427","workstation_type_id":"9b09b6af-3646-4819-926e-e8a11c7a45fe","deactivated_date":"string","capacity":0}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{status=true}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{workstation_code=data/workstation_code, activated_date=data/activated_date, section_code=data/section_code, workstation_id=data/workstation_id, isActive=isActive, workstation_description=data/workstation_description, workstation_type_id=data/workstation_type_id, deactivated_date=data/deactivated_date, status=status}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.schemaxtech.testAutomationFramework.TestAutomationUtil.verifyResponse(TestAutomationUtil.java:323)
at com.schemaxtech.testAutomationFrameworkTest.WorkstationT.createWorkstation(WorkstationT.java:136)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createWorkstation -->
      </class> <!-- com.schemaxtech.testAutomationFrameworkTest.WorkstationT -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
